name: Build Navitia Dockers debian11

on:
  pull_request:
  push:
    branches:
      - dev
    tags:
      - '*'
env:
  debian_version: debian11
  navitia_components: 'jormungandr tyr-web'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Free up space
      run: |
        sudo rm -rf /usr/share/dotnet/*
        sudo rm -rf /usr/local/lib/android/*
        echo "Free space:"
        df -h

    - name: Install dependencies
      run: |
        sudo apt update && sudo apt install -y --force-yes zip httpie

    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules : recursive
        fetch-depth: 0

    - name: Restore ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: build_dockers
        max-size: 2000M

    # see https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-environment-variable
    - name: Choose dev tag
      if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
      run: |
        echo "building version dev"
        echo "navitia_tag=${{env.debian_version}}_dev" >> $GITHUB_ENV
        echo "aws_branch=dev" >> $GITHUB_ENV


    - name: Choose release tag
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        version=$(git describe --tags)
        echo "building version $version"
        echo "navitia_tag=${{env.debian_version}}_$version" >> $GITHUB_ENV
        echo "aws_branch=release" >> $GITHUB_ENV

    - name: Create builder docker
      run: |
        docker build -f docker/${{env.debian_version}}/Dockerfile-builder -t navitia/builder .

    - name: Build navitia
      run: |
        docker run -v `pwd`:/navitia/navitia/  navitia/builder

    - name: Create navitia images
      run: |
        for component in ${{env.navitia_components}}; do
            echo "*********  Building $component ***************"
            docker build -t navitia/$component:${{env.navitia_tag}} -f  docker/${{env.debian_version}}/Dockerfile-${component} .
        done


    - name: Login dockerhub
      run: |
        docker login -u ${{secrets.docker_user}} -p ${{secrets.docker_password}}



    - name: Push navitia images
      run: |
        for component in ${{env.navitia_components}}; do
            echo "*********  Pushing $component ***************"
            docker push navitia/$component:${{env.navitia_tag}}
        done

    - name: Run artemis on push to dev
      if: github.event_name == 'push' && github.ref == 'refs/heads/dev'
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.access_token_github }}
        repository: hove-io/artemis
        event-type: run_artemis_ng_debian11

    - name: failure notification
      if: failure()
      run: |
          echo '{"text":":warning: Github Actions: build_dockers for ${{env.navitia_tag}} failed !"}' | http --json POST ${{secrets.SLACK_NAVITIA_TEAM_URL}}

    - name: success notification on core team
      if: success()
      run: |
          echo '{"text":":octopus: Github Actions: build_dockers succeeded. New navitia ${{env.navitia_tag}} images available."}' | http --json POST ${{secrets.SLACK_NAVITIA_TEAM_URL}}

  build_navitia_arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          platforms: linux/arm64

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.docker_user}}
          password: ${{secrets.docker_password}}

      - name: Build Navitia
        run: |
          docker buildx build --platform linux/arm64 --file docker/debian11_arm64/Dockerfile-builder  --tag navitia/builder_arm64:latest --push .
          docker run --rm --platform linux/arm64 -v `pwd`:/navitia/navitia/  navitia/builder_arm64:latest

      - name: Choose dev tag
        run: |
          echo "building version dev"
          echo "navitia_tag=${{env.debian_version}}_dev" >> $GITHUB_ENV
          echo "aws_branch=dev" >> $GITHUB_ENV

      - name: Choose release tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          version=$(git describe --tags)
          echo "building version $version"
          echo "navitia_tag=${{env.debian_version}}_$version" >> $GITHUB_ENV
          echo "aws_branch=release" >> $GITHUB_ENV

      # https://github.com/marketplace/actions/build-and-push-docker-images
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/debian11_arm64/Dockerfile-jormungandr
          push: true
          tags: navitia/${{matrix.docker_image_name}}_arm64:${{env.navitia_tag}}
          platforms: linux/arm64
