FROM arm64v8/python:3.9-slim-bullseye

WORKDIR /

# https://github.com/aws/aws-graviton-getting-started/blob/main/c-c%2B%2B.md
ENV CPPFLAGS="-mcpu=neoverse-n1 -march=armv8.2-a -moutline-atomics"
ENV CFLAGS="-mcpu=neoverse-n1 -march=armv8.2-a -moutline-atomics"

RUN apt-get update --fix-missing \
    && apt-get install -y curl gcc g++ git libpq5 apache2 libxml2-dev  libxslt1-dev libpq-dev libgeos-c1v5 ca-certificates \
    && CPPFLAGS="-mcpu=neoverse-n1" CFLAGS="-mcpu=neoverse-n1" pip3 install --no-binary :all: --no-cache-dir uwsgi==2.0.21

RUN apt-get install -y zlib1g-dev

# install deps for building Gevent from source
COPY ./docker/debian11/build_gevent.sh ./build_gevent.sh
RUN sh build_gevent.sh

WORKDIR /usr/src/app

COPY ./source/navitiacommon ./navitiacommon
COPY ./source/jormungandr ./jormungandr
COPY ./docker/ca-certificates/*.crt /usr/local/share/ca-certificates/

RUN (cd navitiacommon && python3 setup.py install) \
    && (cd jormungandr && python3 setup.py install && CPPFLAGS="-mcpu=neoverse-n1" CFLAGS="-mcpu=neoverse-n1"  pip3 install --no-binary :all: --no-cache-dir -U -r requirements.txt)\
    && update-ca-certificates \
    && rm -rf navitiacommon jormungandr \
    && apt-get autoremove -y

RUN pip3 uninstall -y protobuf
RUN pip3 install protobuf==3.20.3

COPY ./docker/run_jormungandr.sh ./run.sh
COPY ./docker/jormungandr.wsgi ./jormungandr.wsgi

# Add apache config
RUN rm /etc/apache2/sites-available/000-default.conf /etc/apache2/conf-available/other-vhosts-access-log.conf
COPY ./docker/apache/jormungandr.default.conf /etc/apache2/sites-available/000-default.conf
COPY ./docker/apache/apache2.conf /etc/apache2/apache2.conf
COPY ./docker/apache/envvars /etc/apache2/envvars
COPY ./docker/apache/logformat.conf /etc/apache2/conf-available/logformat.conf
COPY ./docker/apache/security.conf /etc/apache2/conf-available/security.conf

RUN a2ensite 000-default.conf \
    && a2enmod rewrite \
    && a2enmod proxy \
    && a2enmod proxy_balancer \
    && a2enmod proxy_http \
    && a2enconf logformat.conf \
    && a2enmod deflate

 # Python 'requests' package handle its own CA certificate list
 # Let's force it to use the OS's list
 ENV REQUESTS_CA_BUNDLE /etc/ssl/certs

# Redirect apache log output to docker log collector
 RUN ln -sf /proc/self/fd/1 /var/log/apache2/access.log \
     && ln -sf /proc/self/fd/2 /var/log/apache2/error.log


HEALTHCHECK CMD curl -f http://localhost/v1 || exit 1

EXPOSE 80

ENTRYPOINT [ "/usr/src/app/run.sh" ]
